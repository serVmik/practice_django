{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"pip/","title":"pip install","text":""},{"location":"pip/#create-venv","title":"Create venv","text":""},{"location":"pip/#poetry","title":"poetry","text":"<p><pre><code>sudo apt update\n</code></pre> <pre><code>sudo apt install curl\n</code></pre> Install a specific version: <pre><code>curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.5.1 python3 -\n</code></pre> \u0421heck installation success <pre><code>poetry --version\n</code></pre></p>"},{"location":"pip/#add-poetry-to-your-path","title":"Add Poetry to your PATH:","text":"<p><pre><code>export PATH=\"/home/{user}/.local/bin:$PATH\"\n</code></pre> Enable the creation of a virtual environment: <pre><code>poetry config virtualenvs.in-project true\n</code></pre> Create the application directory: <pre><code>mkdir practice_django  \ncd practice_django\n</code></pre> <pre><code>poetry install\n</code></pre> Create a virtual environment: <pre><code>poetry shell\n</code></pre> <code>Poetry</code> will create <code>.venv</code> in the current directory.</p>"},{"location":"pip/#mkdocs","title":"mkdocs","text":"<pre><code>poetry add --group doc mkdocs\n</code></pre>"},{"location":"pip/#mkdocs-material","title":"mkdocs-material","text":"<pre><code>poetry add --group doc mkdocs-material\n</code></pre>"},{"location":"pip/#mkdocs-awesome-pages-plugin","title":"mkdocs-awesome-pages-plugin","text":"<pre><code>poetry add --group doc mkdocs-awesome-pages-plugin\n</code></pre>"},{"location":"pip/#django","title":"Django","text":"<pre><code>poetry add django==4.2.8\n</code></pre>"},{"location":"pip/#django-crispy-forms","title":"django-crispy-forms","text":"<pre><code>poetry add django-crispy-forms\n</code></pre>"},{"location":"pip/#django-cleanup","title":"django-cleanup","text":"<pre><code>poetry add django-cleanup\n</code></pre>"},{"location":"pip/#pillow","title":"pillow","text":"<pre><code>poetry add pillow\n</code></pre>"},{"location":"pip/#django-ckeditor","title":"django-ckeditor","text":"<pre><code>django-ckeditor\n</code></pre>"},{"location":"pip/#django-allauth","title":"django-allauth","text":"<p>Authorization library <pre><code>poetry add django-allauth\n</code></pre></p>"},{"location":"pip/#python-dotenv","title":"python-dotenv","text":"<pre><code>poetry add python-dotenv\n</code></pre>"},{"location":"pip/#django-braces","title":"django-braces","text":"<pre><code>poetry add django-braces\n</code></pre>"},{"location":"pip/#djangocontribhumanize","title":"django.contrib.humanize","text":"<p>(\u0430\u043d\u0433\u043b. - \u043e\u0447\u0435\u043b\u043e\u0432\u0435\u0447\u0438\u0432\u0430\u043d\u0438\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432) linc </p>"},{"location":"pip/#django-debug-toolbar","title":"django-debug-toolbar","text":""},{"location":"pip/#settingspy","title":"settings.py","text":"<p><pre><code>INTERNAL_IPS = [\n    # ...\n    \"127.0.0.1\",\n    # ...\n]\n</code></pre> <pre><code>ALLOWED_HOSTS = [\n    # ...\n]\n</code></pre></p>"},{"location":"pip/#urlspy","title":"urls.py","text":"<p><pre><code>if settings.DEBUG:\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n</code></pre> <pre><code>if settings.DEBUG:\n\n    import debug_toolbar\n    urlpatterns = [\n        path(\"__debug__/\", include('debug_toolbar.urls')),\n    ]\n</code></pre></p>"},{"location":"pip/#channels","title":"channels","text":""},{"location":"pip/#settingspy_1","title":"settings.py","text":"<pre><code>INSTALLED_APPS = (\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.sites\",\n    ...\n    \"channels\",\n    ...\n)\n</code></pre> <p>Note: \"channels\" add without adding \"daphne\" to INSTALLED_APPS.</p> <pre><code>ASGI_APPLICATION = \"practice_django.routing.application\"\n</code></pre> <pre><code>CHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels.layers.InMemoryChannelLayer\"\n    }\n}\n</code></pre>"},{"location":"pip/#routingpy","title":"routing.py","text":"<p>add <code>routing.py</code> to <code>practice_django/</code></p>"},{"location":"pip/#jupyter-notebook","title":"jupyter-notebook","text":"<pre><code>poetry add --group dev notebook==6.5.6\n</code></pre> <p>Note: add only notebook==6.5.6</p> <p>To integrate <code>notebook</code> with <code>Django</code> you need to install <code>django-extensions</code>  To run the notebook: <pre><code>jupyter notebook\n</code></pre></p>"},{"location":"pip/#jupyterthemes","title":"jupyterthemes","text":"<pre><code>poetry add --group dev jupyterthemes\n</code></pre>"},{"location":"pip/#command-line-usage-jupyterthemes","title":"Command Line Usage jupyterthemes","text":"<p>cl options| arg |default |-|-|-| List Themes| -l  |-- Theme Name to Install| -t  |--</p> <p>list available themes jt -l  </p> <p>select theme... jt -t chesterish  </p>"},{"location":"pip/#auto-code-completion-jupyter-tabnine","title":"Auto code completion jupyter-tabnine","text":"<p><pre><code>poetry add --group dev jupyter_contrib_nbextensions\n</code></pre> Do enable settings for user. Add without using poetry: <pre><code>jupyter contrib nbextension install --user\n</code></pre> Next: <pre><code>poetry add --group dev jupyter_nbextensions_configurator\n</code></pre> Do enable settings for user. Add without using poetry: <pre><code>jupyter nbextensions_configurator enable --user\n</code></pre> Do enable auto code completion in the settings of the running application jupiter. Go to menu \"Nbextensions\" and uncheck disable configuration for nbextensions. \u0421heck the box \"Hinterland\". End.</p>"},{"location":"pip/#run-jupiter-notebook","title":"Run jupiter notebook:","text":"<p><pre><code>poetry run python manage.py shell_plus --notebook\n</code></pre> or <pre><code>make shell\n</code></pre></p>"},{"location":"pip/#django-extensions","title":"django-extensions","text":"<p><pre><code>poetry add --group dev django-extensions\n</code></pre> Configuration <pre><code>INSTALLED_APPS = (\n    ...\n    'django_extensions',\n    ...\n)\n</code></pre></p>"}]}